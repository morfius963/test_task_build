{"version":3,"sources":["components/goods-list/index.js","components/goods-card/index.js","components/cart-empty/index.js","redux/goods/actions.js","redux/goods/actionTypes.js","utils.js","containers/cart/index.js","components/cart/index.js","App.js","redux/goods/goods-reducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["GoodsList","title","children","className","VALUES","GoodsCard","id","avatar","name","count","price","changeCount","removeGood","useState","itemCount","setItemCount","useEffect","key","src","width","alt","onClick","type","disabled","min","max","value","onChange","e","target","readOnly","CartEmpty","refreshData","payload","getRandomNum","Math","floor","random","generateData","Array","fill","map","elem","i","changeItemCount","allItems","itemId","oldItem","find","array","newItem","oldItemIndex","findIndex","slice","replaceArrayItem","removeArrayItem","itemIndex","withCart","Component","mapDispatchToProps","connect","arr","goodsReducer","allGoods","goods","fullPrice","reduce","acc","props","length","Set","sort","goodType","goodsByType","filter","App","initialState","state","action","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58e828c7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nconst GoodsList = ({ title, children }) => (\n  <section className=\"goods-list\">\n    <div className=\"goods-list__title\">\n      {title}\n    </div>\n\n    {children}\n  </section>\n);\n\nGoodsList.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nexport default GoodsList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nconst VALUES = {\n  MIN: 1,\n  MAX: 999,\n};\n\nconst GoodsCard = ({ id, avatar, name, count, price, changeCount, removeGood }) => {\n  const [itemCount, setItemCount] = useState(count);\n  const onItemCountChange = e => setItemCount(e.target.value);\n  const increaseItemCount = () => setItemCount(itemCount + 1);\n  const decreaseItemCount = () => setItemCount(itemCount - 1);\n  const deleteGood = () => removeGood(id);\n\n  useEffect(() => {\n    changeCount(id, itemCount)\n  }, [itemCount, changeCount, id]);\n\n  return (\n    <article key={id**2} className=\"goods-item\">\n      <div className=\"goods-item__image\">\n        <img src={avatar} width=\"80\" alt=\"Good item\" />\n      </div>\n      <div className=\"goods-item__info\">\n        <h3>{name}</h3>\n        <p>$0.5/kg</p>\n      </div>\n      <div className=\"goods-item__number-input\">\n        <button\n          onClick={decreaseItemCount}\n          type=\"button\"\n          className=\"goods-item__number-btn\"\n          disabled={itemCount === VALUES.MIN}\n        >\n          &#x2212;\n        </button>\n        <input\n          type=\"number\"\n          min=\"1\"\n          max=\"999\"\n          value={itemCount}\n          onChange={onItemCountChange}\n          readOnly\n          />\n        <button\n          onClick={increaseItemCount}\n          type=\"button\"\n          className=\"goods-item__number-btn\"\n          disabled={itemCount === VALUES.MAX}\n        >\n          &#43;\n        </button>\n      </div>\n      <p className=\"goods-item__price\">\n        &#36;{price * itemCount}\n      </p>\n      <button onClick={deleteGood} type=\"button\" className=\"goods-item__remove-btn\">\n        <img src=\"images/cancel.svg\" width=\"16\" alt=\"Remove good from the list\" />\n      </button>\n    </article>\n  );\n};\n\nGoodsCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  count: PropTypes.number.isRequired,\n  price: PropTypes.number.isRequired,\n  changeCount: PropTypes.func.isRequired,\n  removeGood: PropTypes.func.isRequired,\n}\n\nexport default GoodsCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nconst CartEmpty = ({ refreshData }) => (\n  <section className=\"cart-empty\">\n    <h3 className=\"cart-empty__title\">\n      Your cart is empty. Click the button below to get new data\n    </h3>\n    <button onClick={refreshData} type=\"button\" className=\"cart-empty__refresh-btn\">\n      Refresh\n    </button>\n  </section>\n);\n\nCartEmpty.propTypes = {\n  refreshData: PropTypes.func.isRequired,\n};\n\nexport default CartEmpty;\n","import { CHANGE_COUNT, REMOVE_GOOD, REFRESH_DATA } from './actionTypes';\n\nexport const changeCount = (id, count) => ({\n  type: CHANGE_COUNT,\n  payload: {\n    id,\n    count,\n  },\n});\n\nexport const removeGood = (id, count) => ({\n  type: REMOVE_GOOD,\n  payload: { id },\n});\n\nexport const refreshData = () => ({\n  type: REFRESH_DATA,\n});\n","export const CHANGE_COUNT = 'goods/CHANGE_COUNT';\nexport const REMOVE_GOOD = 'goods/REMOVE_GOOD';\nexport const REFRESH_DATA = 'goods/REFRESH_DATA';\n","export const getRandomNum = (min, max) => Math.floor(min + Math.random() * (max + 1 - min));\n\nexport const getRandomArray = (arr, min, max) => {\n  const sortedArray = arr.slice().sort(() => Math.random() - 0.5);\n  const randomMax = getRandomNum(min, max);\n\n  return sortedArray.slice(min, randomMax);\n};\n\nexport const generateData = () => new Array(getRandomNum(5,15))\n  .fill('')\n  .map((elem, i) => ({\n    id: i**2,\n    type: [\n      'Fruit',\n      'Candy',\n      'Vegetable'\n    ][Math.floor(Math.random() * 3)],\n    avatar: `https://i.picsum.photos/id/${getRandomNum(1, 100)}/200/200.jpg`,\n    name: 'Product name',\n    count: getRandomNum(1, 4),\n    price: getRandomNum(100, 999),\n  }));\n\nexport const getFullPrice = arr => arr.reduce((acc, { price, count }) => acc + (price * count) , 0);\n\nexport const getAllTypes = array => [...new Set(array.map(({ type }) => type))].sort();\n\nexport const replaceArrayItem = (array, newItem) => {\n  const oldItemIndex = array.findIndex(({ id }) => id === newItem.id);\n\n  return [...array.slice(0, oldItemIndex), newItem, ...array.slice(oldItemIndex + 1)];\n};\n\nexport const changeItemCount = (allItems, itemId, itemCount) => {\n  const oldItem = {\n    ...allItems.find(({ id }) => id === itemId)\n  };\n\n  oldItem.count = itemCount;\n\n  return replaceArrayItem(allItems, oldItem);\n};\n\nexport const removeArrayItem = (allItems, itemId) => {\n  const itemIndex = allItems.findIndex(({ id }) => id === itemId);\n\n  if (itemIndex === -1) {\n    return [];\n  }\n\n  return [...allItems.slice(0, itemIndex), ...allItems.slice(itemIndex + 1)];\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeCount, removeGood, refreshData } from '../../redux/goods/actions';\nimport { getFullPrice } from '../../utils';\n\nconst withCart = (Component) => {\n  const CartContainer = (props) => (\n    <Component\n      {...props}\n    />\n  );\n\n  const mapStateToProps = ({ goodsReducer }) => ({\n    allGoods: goodsReducer.goods,\n    fullPrice: getFullPrice(goodsReducer.goods),\n  });\n\n  const mapDispatchToProps = {\n    changeCount,\n    removeGood,\n    refreshData,\n  };\n\n  return connect(mapStateToProps, mapDispatchToProps)(CartContainer);\n}\n\nexport default withCart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport GoodsList from '../goods-list';\nimport GoodsCard from '../goods-card';\nimport CartEmpty from '../cart-empty';\nimport withCart from '../../containers/cart';\nimport { getAllTypes } from '../../utils';\n\nimport './styles.scss';\n\nconst Cart = ({ allGoods, fullPrice, changeCount, removeGood, refreshData }) => (\n  <article className=\"goods-cart\">\n    <button type=\"button\" className=\"goods-cart__close-btn\">\n      <img src=\"images/close.svg\" width=\"16\" alt=\"Close cart\" />\n    </button>\n\n    <h2 className=\"goods-cart__title\">\n      My cart\n    </h2>\n\n    <p className=\"goods-cart__desc\">\n      Your cart items with pickup time &#38; store info\n    </p>\n\n    <ul className=\"goods-cart__info\">\n      <li className=\"goods-cart__info-item\">\n        <div className=\"goods-cart__info-item-image\">\n          <img src=\"images/package.svg\" width=\"53\" alt=\"Delivery time\" />\n        </div>\n        <div className=\"goods-cart__info-item-desc\">\n          <h3>11:30 AM - 12:00 PM</h3>\n          <p>Friday, 24 April, 2020</p>\n        </div>\n      </li>\n      <li className=\"goods-cart__info-item\">\n        <div className=\"goods-cart__info-item-image\">\n          <img src=\"images/location.svg\" width=\"47\" alt=\"Company address\" />\n        </div>\n        <div className=\"goods-cart__info-item-desc\">\n          <h3>City Store</h3>\n          <p>336A, North Town, CA</p>\n        </div>\n      </li>\n    </ul>\n\n    {allGoods.length === 0 ? (\n      <CartEmpty refreshData={refreshData} />\n    ) : (\n      getAllTypes(allGoods).map((goodType, i) => {\n        const goodsByType = allGoods.filter(({ type }) => type === goodType);\n\n        return (\n          <GoodsList\n            key={`${goodType}-${i}`}\n            title={goodType}\n          >\n            {goodsByType.map((props) => (\n              <GoodsCard\n                key={props.id}\n                changeCount={changeCount}\n                removeGood={removeGood}\n                {...props} />\n            ))}\n          </GoodsList>\n        )\n      })\n    )}\n\n    {allGoods.length > 0 && (\n      <div className=\"goods-cart__total\">\n        <button className=\"goods-cart__submit-btn\">\n          Checkout\n        </button>\n        <p className=\"goods-cart__total-price\">\n          Subtotal: &#36;{fullPrice}\n        </p>\n      </div>\n    )}\n\n  </article>\n);\n\nCart.propTypes = {\n  allGoods: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      type: PropTypes.oneOf(['Fruit','Candy','Vegetable']),\n      avatar: PropTypes.string,\n      name: PropTypes.string,\n      count: PropTypes.number,\n      price: PropTypes.number,\n    })\n  ).isRequired,\n  fullPrice: PropTypes.number.isRequired,\n  changeCount: PropTypes.func.isRequired,\n  removeGood: PropTypes.func.isRequired,\n  refreshData: PropTypes.func.isRequired,\n};\n\nexport default withCart(Cart);\n","import React from 'react';\nimport Cart from './components/cart';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Cart />\n    </div>\n  );\n}\n\nexport default App;\n","import { CHANGE_COUNT, REMOVE_GOOD, REFRESH_DATA } from './actionTypes';\nimport { generateData, changeItemCount, removeArrayItem } from '../../utils';\n\nconst initialState = {\n  goods: generateData(),\n};\n\nconst goodsReducer = (state = initialState, action) => {\n  const { type } = action;\n\n  switch (type) {\n    case CHANGE_COUNT: {\n      const { id, count } = action.payload;\n      return {\n        goods: changeItemCount(state.goods, id, count),\n      };\n    }\n\n    case REMOVE_GOOD: {\n      const { id } = action.payload;\n      return {\n        goods: removeArrayItem(state.goods, id),\n      };\n    }\n\n    case REFRESH_DATA: {\n      return {\n        goods: generateData(),\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default goodsReducer;\n","import { combineReducers } from 'redux';\nimport goodsReducer from './goods/goods-reducer';\n\nconst rootReducer = combineReducers({\n  goodsReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './redux/store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}